
-- =============================================
-- Author:      Davide Moraschi
-- Create Date: 20200827 https://dev.azure.com/sis-cat-com/devops-infra/_workitems/edit/7179/
-- Description: Conditional load from STAGING LNKNPRINFORECTYPE456 + populate sis tables
-- =============================================
CREATE PROCEDURE [SISWEB_OWNER_STAGING].[LNKNPRINFORECTYPE456_Merge] (@FORCE_LOAD BIT = 'FALSE'
																,@DEBUG      BIT = 'FALSE') 
AS
BEGIN
	SET XACT_ABORT,NOCOUNT ON;
	BEGIN TRY
		DECLARE @MODIFIED_ROWS_PERCENTAGE      DECIMAL(12,4)    = 0
			   ,@MERGED_ROWS                   INT              = 0
			   ,@PROCNAME                      VARCHAR(200)     = OBJECT_SCHEMA_NAME(@@PROCID) + '.' + OBJECT_NAME(@@PROCID)
			   ,@PROCESSID                     UNIQUEIDENTIFIER = NEWID()
			   ,@LOGMESSAGE                    VARCHAR(MAX)
			   ,@SYSUTCDATETIME                DATETIME2(6)     = SYSUTCDATETIME();

		DECLARE @MERGE_RESULTS TABLE (ACTIONTYPE               NVARCHAR(10)
									 ,PRIMARYSEQNO             INT NOT NULL
									 ,RECORDTYPE               VARCHAR(1) NOT NULL
									 ,SEQUENCENUMBER           INT NOT NULL
									 ,COLUMNDATA               VARCHAR(64) NULL
									 ,QUANTITYRECTYPE5         SMALLINT NULL
									 ,SERIALNUMBERSYMBOL       VARCHAR(1) NULL
									 ,SERIALNUMBERPREFIX       VARCHAR(4) NULL
									 ,EFFECTIVESERIALNUMBER    VARCHAR(5) NULL
									 ,DISCONTINUEDSERIALNUMBER VARCHAR(5) NULL
									 ,QUANTITYRECTYPE6         SMALLINT NULL
									 ,GROUPNUMBER              VARCHAR(10) NULL
									 ,ENGINEERINGCHANGE        VARCHAR(5) NULL
									 ,NPRINDICATOR             VARCHAR(20) NULL);

		BEGIN TRANSACTION;
		EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Execution started',@DATAVALUE = NULL;

		IF @FORCE_LOAD = 'FALSE'
		BEGIN
			EXEC @MODIFIED_ROWS_PERCENTAGE = [SISWEB_OWNER_STAGING].[_getModifiedRowsPercentage] @SISWEB_OWNER_TABLE='LNKNPRINFORECTYPE456', @SISWEB_OWNER_STAGING_TABLE = 'LNKNPRINFORECTYPE456'
		END;

		IF @FORCE_LOAD = 'TRUE' OR 
		   @MODIFIED_ROWS_PERCENTAGE BETWEEN 0 AND 10
		BEGIN
			SET @LOGMESSAGE = 'Executing load: ' + IIF(@FORCE_LOAD = 1,'Force Load = TRUE','Force Load = FALSE');
			EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = NULL;

			/* MERGE command */
			MERGE INTO SISWEB_OWNER.LNKNPRINFORECTYPE456 tgt
			USING SISWEB_OWNER_STAGING.LNKNPRINFORECTYPE456 src
			ON src.PRIMARYSEQNO = tgt.PRIMARYSEQNO AND 
			   src.RECORDTYPE = tgt.RECORDTYPE AND 
			   src.SEQUENCENUMBER = tgt.SEQUENCENUMBER
			WHEN MATCHED AND EXISTS
			(
				SELECT src.COLUMNDATA,src.QUANTITYRECTYPE5,src.SERIALNUMBERSYMBOL,src.SERIALNUMBERPREFIX,src.EFFECTIVESERIALNUMBER,src.DISCONTINUEDSERIALNUMBER,src.
				QUANTITYRECTYPE6,src.GROUPNUMBER,src.ENGINEERINGCHANGE,src.NPRINDICATOR
				EXCEPT
				SELECT tgt.COLUMNDATA,tgt.QUANTITYRECTYPE5,tgt.SERIALNUMBERSYMBOL,tgt.SERIALNUMBERPREFIX,tgt.EFFECTIVESERIALNUMBER,tgt.DISCONTINUEDSERIALNUMBER,tgt.
				QUANTITYRECTYPE6,tgt.GROUPNUMBER,tgt.ENGINEERINGCHANGE,tgt.NPRINDICATOR
			)
				  THEN UPDATE SET tgt.COLUMNDATA = src.COLUMNDATA,tgt.QUANTITYRECTYPE5 = src.QUANTITYRECTYPE5,tgt.SERIALNUMBERSYMBOL = src.SERIALNUMBERSYMBOL,tgt.
				  SERIALNUMBERPREFIX = src.SERIALNUMBERPREFIX,tgt.EFFECTIVESERIALNUMBER = src.EFFECTIVESERIALNUMBER,tgt.DISCONTINUEDSERIALNUMBER = src.DISCONTINUEDSERIALNUMBER,tgt
				  .QUANTITYRECTYPE6 = src.QUANTITYRECTYPE6,tgt.GROUPNUMBER = src.GROUPNUMBER,tgt.ENGINEERINGCHANGE = src.ENGINEERINGCHANGE,tgt.NPRINDICATOR = src.NPRINDICATOR
			WHEN NOT MATCHED BY TARGET
				  THEN
				  INSERT(PRIMARYSEQNO,RECORDTYPE,SEQUENCENUMBER,COLUMNDATA,QUANTITYRECTYPE5,SERIALNUMBERSYMBOL,SERIALNUMBERPREFIX,EFFECTIVESERIALNUMBER,DISCONTINUEDSERIALNUMBER,
				  QUANTITYRECTYPE6,GROUPNUMBER,ENGINEERINGCHANGE,NPRINDICATOR)
				  VALUES (src.PRIMARYSEQNO,src.RECORDTYPE,src.SEQUENCENUMBER,src.COLUMNDATA,src.QUANTITYRECTYPE5,src.SERIALNUMBERSYMBOL,src.SERIALNUMBERPREFIX,src.
				  EFFECTIVESERIALNUMBER,src.DISCONTINUEDSERIALNUMBER,src.QUANTITYRECTYPE6,src.GROUPNUMBER,src.ENGINEERINGCHANGE,src.NPRINDICATOR) 
			WHEN NOT MATCHED BY SOURCE
				  THEN DELETE
			OUTPUT $ACTION,COALESCE(inserted.PRIMARYSEQNO,deleted.PRIMARYSEQNO) PRIMARYSEQNO,COALESCE(inserted.RECORDTYPE,deleted.RECORDTYPE) RECORDTYPE,COALESCE(inserted.
			SEQUENCENUMBER,deleted.SEQUENCENUMBER) SEQUENCENUMBER,COALESCE(inserted.COLUMNDATA,deleted.COLUMNDATA) COLUMNDATA,COALESCE(inserted.QUANTITYRECTYPE5,deleted.
			QUANTITYRECTYPE5) QUANTITYRECTYPE5,COALESCE(inserted.SERIALNUMBERSYMBOL,deleted.SERIALNUMBERSYMBOL) SERIALNUMBERSYMBOL,COALESCE(inserted.SERIALNUMBERPREFIX,deleted.
			SERIALNUMBERPREFIX) SERIALNUMBERPREFIX,COALESCE(inserted.EFFECTIVESERIALNUMBER,deleted.EFFECTIVESERIALNUMBER) EFFECTIVESERIALNUMBER,COALESCE(inserted.
			DISCONTINUEDSERIALNUMBER,deleted.DISCONTINUEDSERIALNUMBER) DISCONTINUEDSERIALNUMBER,COALESCE(inserted.QUANTITYRECTYPE6,deleted.QUANTITYRECTYPE6) QUANTITYRECTYPE6,
			COALESCE(inserted.GROUPNUMBER,deleted.GROUPNUMBER) GROUPNUMBER,COALESCE(inserted.ENGINEERINGCHANGE,deleted.ENGINEERINGCHANGE) ENGINEERINGCHANGE,COALESCE(inserted.
			NPRINDICATOR,deleted.NPRINDICATOR) NPRINDICATOR
				   INTO @MERGE_RESULTS;

			/* MERGE command */

			SELECT @MERGED_ROWS = @@ROWCOUNT;
			SET @LOGMESSAGE = IIF(@DEBUG = 'TRUE',
			(
				SELECT(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE = 'INSERT') AS Inserted,(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE =
				'UPDATE'
				) AS Updated,(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE = 'DELETE') AS Deleted,
				(
					SELECT MR.PRIMARYSEQNO,MR.RECORDTYPE,MR.SEQUENCENUMBER,MR.COLUMNDATA,MR.QUANTITYRECTYPE5,MR.SERIALNUMBERSYMBOL,MR.SERIALNUMBERPREFIX,MR.EFFECTIVESERIALNUMBER,
					MR.DISCONTINUEDSERIALNUMBER,MR.QUANTITYRECTYPE6,MR.GROUPNUMBER,MR.ENGINEERINGCHANGE,MR.NPRINDICATOR
					FROM @MERGE_RESULTS AS MR FOR JSON AUTO
				) AS Modified_Rows FOR JSON PATH,WITHOUT_ARRAY_WRAPPER
			),'Modified Rows');
			EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = @MERGED_ROWS;
		END;
		ELSE
		BEGIN
			EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Error',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Skipping load: Row difference outside range (±10%)',
			@DATAVALUE = NULL;
		END;
		COMMIT;

								UPDATE STATISTICS SISWEB_OWNER.LNKNPRINFORECTYPE456 WITH FULLSCAN;


		EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Execution completed',@DATAVALUE = NULL;
	END TRY
	BEGIN CATCH
		DECLARE @ERRORMESSAGE NVARCHAR(4000) = ERROR_MESSAGE()
			   ,@ERRORLINE    INT            = ERROR_LINE();

		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION;
		SET @LOGMESSAGE = 'LINE ' + CAST(@ERRORLINE AS VARCHAR(10)) + ': ' + @ERRORMESSAGE;
		EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Error',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = NULL;
	END CATCH;
END;