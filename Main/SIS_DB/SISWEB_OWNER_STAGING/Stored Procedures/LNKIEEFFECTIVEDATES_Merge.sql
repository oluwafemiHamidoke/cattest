
-- =============================================
-- Author:      Davide Moraschi
-- Create Date: 20191119
-- Modify Date: 20191218 - Davide: added @DEBUG parameter and [LASTMODIFIEDDATE] column
-- Modify Date: 20201120 - Davide: added UPDATE STATS see: https://dev.azure.com/sis-cat-com/devops-infra/_workitems/edit/86007
-- Modify Date: 20201209 - Davide: we have now a proper PK see: https://dev.azure.com/sis-cat-com/devops-infra/_workitems/edit/8830/
-- Description: Conditional load from STAGING LNKIEEFFECTIVEDATES
-- =============================================
CREATE PROCEDURE SISWEB_OWNER_STAGING.LNKIEEFFECTIVEDATES_Merge (@FORCE_LOAD BIT = 'FALSE'
															   ,@DEBUG      BIT = 'FALSE') 
AS
BEGIN
	SET XACT_ABORT,NOCOUNT ON;
	BEGIN TRY
		DECLARE @MODIFIED_ROWS_PERCENTAGE      DECIMAL(12,4)    = 0
			   ,@MERGED_ROWS                   INT              = 0
			   ,@PROCNAME                      VARCHAR(200)     = OBJECT_SCHEMA_NAME(@@PROCID) + '.' + OBJECT_NAME(@@PROCID)
			   ,@PROCESSID                     UNIQUEIDENTIFIER = NEWID()
			   ,@LOGMESSAGE                    VARCHAR(MAX)
			   ,@SYSUTCDATETIME                DATETIME2(6)     = SYSUTCDATETIME();
		DECLARE @MERGE_RESULTS TABLE (ACTIONTYPE            NVARCHAR(10)
									 ,PARTNUMBER            VARCHAR(7) NOT NULL
									 ,CONTROLNUMBER         VARCHAR(12) NOT NULL
									 ,PREFIX                VARCHAR(3) NOT NULL
                                     ,SERIALNUMBERPREFIX    VARCHAR(3) NOT NULL
									 ,BEGINRANGE            INT NOT NULL
									 ,ENDRANGE              INT NOT NULL
									 ,DAYEFFECTIVE          DATETIME2(0) NOT NULL
									 ,DAYNOTEFFECTIVE       DATETIME2(0) NULL
									 ,MEDIANUMBER           VARCHAR(8) NOT NULL
									 ,IESYSTEMCONTROLNUMBER VARCHAR(12) NOT NULL);

		BEGIN TRANSACTION;
		EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Execution started',@DATAVALUE = NULL;

		IF @FORCE_LOAD = 'FALSE'
		BEGIN
            EXEC @MODIFIED_ROWS_PERCENTAGE = [SISWEB_OWNER_STAGING].[_getModifiedRowsPercentage] @SISWEB_OWNER_TABLE='LNKIEEFFECTIVEDATES', @SISWEB_OWNER_STAGING_TABLE = 'LNKIEEFFECTIVEDATES';
		END;

		IF @FORCE_LOAD = 'TRUE' OR 
		   @MODIFIED_ROWS_PERCENTAGE BETWEEN 0 AND 10
		BEGIN
			SET @LOGMESSAGE = 'Executing load: ' + IIF(@FORCE_LOAD = 1,'Force Load = TRUE','Force Load = FALSE');
			EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = NULL;

			/* MERGE command */
			MERGE INTO SISWEB_OWNER.LNKIEEFFECTIVEDATES tgt
			USING SISWEB_OWNER_STAGING.LNKIEEFFECTIVEDATES src
			ON src.PARTNUMBER = tgt.PARTNUMBER AND
			   src.CONTROLNUMBER = tgt.CONTROLNUMBER AND
			   src.PREFIX = tgt.PREFIX AND
               src.PREFIX = tgt.SERIALNUMBERPREFIX AND
               src.BEGINRANGE = tgt.BEGINRANGE AND
			   src.ENDRANGE = tgt.ENDRANGE AND
			   src.DAYEFFECTIVE = tgt.DAYEFFECTIVE AND
			   src.IESYSTEMCONTROLNUMBER = tgt.IESYSTEMCONTROLNUMBER
			WHEN MATCHED AND EXISTS
			(
				SELECT src.DAYNOTEFFECTIVE,src.MEDIANUMBER
				EXCEPT
				SELECT tgt.DAYNOTEFFECTIVE,tgt.MEDIANUMBER
			)
				  THEN UPDATE SET tgt.DAYNOTEFFECTIVE = src.DAYNOTEFFECTIVE,tgt.MEDIANUMBER = src.MEDIANUMBER,tgt.LASTMODIFIEDDATE = @SYSUTCDATETIME
			WHEN NOT MATCHED BY TARGET
				  THEN
				  INSERT(PARTNUMBER,CONTROLNUMBER,PREFIX,SERIALNUMBERPREFIX,BEGINRANGE,ENDRANGE,DAYEFFECTIVE,DAYNOTEFFECTIVE,MEDIANUMBER,IESYSTEMCONTROLNUMBER,LASTMODIFIEDDATE)
				  VALUES (src.PARTNUMBER,src.CONTROLNUMBER,src.PREFIX,src.PREFIX,src.BEGINRANGE,src.ENDRANGE,src.DAYEFFECTIVE,src.DAYNOTEFFECTIVE,src.MEDIANUMBER,src.IESYSTEMCONTROLNUMBER,
				  @SYSUTCDATETIME)
			WHEN NOT MATCHED BY SOURCE
				  THEN DELETE
			OUTPUT $ACTION,COALESCE(inserted.PARTNUMBER,deleted.PARTNUMBER) PARTNUMBER,COALESCE(inserted.CONTROLNUMBER,deleted.CONTROLNUMBER) CONTROLNUMBER,COALESCE(inserted.
			PREFIX,deleted.PREFIX) PREFIX,COALESCE(inserted.SERIALNUMBERPREFIX,deleted.SERIALNUMBERPREFIX) SERIALNUMBERPREFIX,COALESCE(inserted.BEGINRANGE,deleted.BEGINRANGE)
            BEGINRANGE,COALESCE(inserted.ENDRANGE,deleted.ENDRANGE) ENDRANGE,COALESCE(inserted.DAYEFFECTIVE,deleted.DAYEFFECTIVE) DAYEFFECTIVE,COALESCE(inserted.DAYNOTEFFECTIVE,
            deleted.DAYNOTEFFECTIVE) DAYNOTEFFECTIVE,COALESCE(inserted.MEDIANUMBER,deleted.MEDIANUMBER) MEDIANUMBER,COALESCE(inserted.IESYSTEMCONTROLNUMBER,deleted.IESYSTEMCONTROLNUMBER) IESYSTEMCONTROLNUMBER
				   INTO @MERGE_RESULTS;

			/* MERGE command */

			SELECT @MERGED_ROWS = @@ROWCOUNT;
			SET @LOGMESSAGE = IIF(@DEBUG = 'TRUE',
			(
				SELECT(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE = 'INSERT') AS Inserted,(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE =
				'UPDATE'
				) AS Updated,(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE = 'DELETE') AS Deleted,
				(
					SELECT MR.ACTIONTYPE,MR.PARTNUMBER,MR.CONTROLNUMBER,MR.PREFIX,MR.SERIALNUMBERPREFIX,MR.BEGINRANGE,MR.ENDRANGE,MR.DAYEFFECTIVE,MR.DAYNOTEFFECTIVE,MR.MEDIANUMBER,MR.
					IESYSTEMCONTROLNUMBER
					FROM @MERGE_RESULTS AS MR FOR JSON AUTO
				) AS Modified_Rows FOR JSON PATH,WITHOUT_ARRAY_WRAPPER
			),'Modified Rows');
			EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = @MERGED_ROWS;
		END;
		ELSE
		BEGIN
			EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Error',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Skipping load: Row difference outside range (±10%)',
			@DATAVALUE = NULL;
		END;
		COMMIT;

		/* STATS command */
		SET @LOGMESSAGE = 'Updating Statistics';
		EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = NULL;
		UPDATE STATISTICS SISWEB_OWNER.LNKIEEFFECTIVEDATES WITH FULLSCAN;

		EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Execution completed',@DATAVALUE = NULL;
	END TRY
	BEGIN CATCH
		DECLARE @ERRORMESSAGE NVARCHAR(4000) = ERROR_MESSAGE()
			   ,@ERRORLINE    INT            = ERROR_LINE();

		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION;
		SET @LOGMESSAGE = 'LINE ' + CAST(@ERRORLINE AS VARCHAR(10)) + ': ' + @ERRORMESSAGE;
		EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Error',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = NULL;
	END CATCH;
END;