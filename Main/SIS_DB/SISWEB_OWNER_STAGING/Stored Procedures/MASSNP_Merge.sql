-- =============================================
-- Author:      Davide Moraschi
-- Create Date: 20191119
-- Modify Date: 20191218 - Davide: added @DEBUG parameter and [LASTMODIFIEDDATE] column
-- Description: Conditional load from STAGING MASSNP
-- =============================================
CREATE PROCEDURE SISWEB_OWNER_STAGING.MASSNP_Merge
	(@FORCE_LOAD BIT = 'FALSE'
	,@DEBUG      BIT = 'FALSE') 
AS
BEGIN
	SET XACT_ABORT,NOCOUNT ON;
	BEGIN TRY
		DECLARE @MODIFIED_ROWS_PERCENTAGE      DECIMAL(12,4)    = 0
			   ,@MERGED_ROWS                   INT              = 0
			   ,@PROCNAME                      VARCHAR(200)     = OBJECT_SCHEMA_NAME(@@PROCID) + '.' + OBJECT_NAME(@@PROCID)
			   ,@PROCESSID                     UNIQUEIDENTIFIER = NEWID()
			   ,@LOGMESSAGE                    VARCHAR(MAX)
			   ,@SYSUTCDATETIME                DATETIME2(6)     = SYSUTCDATETIME();
		DECLARE @MERGE_RESULTS TABLE
			(ACTIONTYPE                NVARCHAR(10)
			,CAPTIVESERIALNUMBERPREFIX VARCHAR(10) NOT NULL
			,BEGINNINGRANGE            NUMERIC(5,0) NOT NULL
			,ENDRANGE                  NUMERIC(5,0) NOT NULL
			,PRIMESERIALNUMBERPREFIX   VARCHAR(10) NOT NULL
			,MEDIANUMBER               CHAR(8) NOT NULL
			,DOCUMENTTITLE             VARCHAR(512) NOT NULL
			,CONFIGURATIONTYPE         CHAR(1) NOT NULL);

		BEGIN TRANSACTION;
		EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Execution started',@DATAVALUE = NULL;

		IF @FORCE_LOAD = 'FALSE'
		BEGIN
            EXEC @MODIFIED_ROWS_PERCENTAGE = [SISWEB_OWNER_STAGING].[_getModifiedRowsPercentage] @SISWEB_OWNER_TABLE='MASSNP', @SISWEB_OWNER_STAGING_TABLE = 'MASSNP'
		END;

		IF
		   @FORCE_LOAD = 1
		   OR @MODIFIED_ROWS_PERCENTAGE BETWEEN 0 AND 10
		BEGIN
			SET @LOGMESSAGE = 'Executing load: ' + IIF(@FORCE_LOAD = 1,'Force Load = TRUE','Force Load = FALSE');
			EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = NULL;

			/* MERGE command */
			MERGE INTO SISWEB_OWNER.MASSNP tgt
			USING SISWEB_OWNER_STAGING.MASSNP src
			ON
			   src.CAPTIVESERIALNUMBERPREFIX = tgt.CAPTIVESERIALNUMBERPREFIX
			   AND src.BEGINNINGRANGE = tgt.BEGINNINGRANGE
			   AND src.ENDRANGE = tgt.ENDRANGE
			   AND src.PRIMESERIALNUMBERPREFIX = tgt.PRIMESERIALNUMBERPREFIX
			   AND src.MEDIANUMBER = tgt.MEDIANUMBER
			   AND src.DOCUMENTTITLE = tgt.DOCUMENTTITLE
				WHEN MATCHED AND EXISTS(SELECT src.CONFIGURATIONTYPE
										EXCEPT
										SELECT tgt.CONFIGURATIONTYPE)
				  THEN UPDATE SET tgt.CONFIGURATIONTYPE = src.CONFIGURATIONTYPE,tgt.LASTMODIFIEDDATE = @SYSUTCDATETIME
				WHEN NOT MATCHED BY TARGET
				  THEN
				  INSERT(CAPTIVESERIALNUMBERPREFIX
						,BEGINNINGRANGE
						,ENDRANGE
						,PRIMESERIALNUMBERPREFIX
						,MEDIANUMBER
						,DOCUMENTTITLE
						,CONFIGURATIONTYPE
						,LASTMODIFIEDDATE)
				  VALUES
				(src.CAPTIVESERIALNUMBERPREFIX
				,src.BEGINNINGRANGE
				,src.ENDRANGE
				,src.PRIMESERIALNUMBERPREFIX
				,src.MEDIANUMBER
				,src.DOCUMENTTITLE
				,src.CONFIGURATIONTYPE
				,@SYSUTCDATETIME
				) 
				WHEN NOT MATCHED BY SOURCE
				  THEN DELETE
			OUTPUT $ACTION
				  ,COALESCE(inserted.CAPTIVESERIALNUMBERPREFIX,deleted.CAPTIVESERIALNUMBERPREFIX) CAPTIVESERIALNUMBERPREFIX
				  ,COALESCE(inserted.BEGINNINGRANGE,deleted.BEGINNINGRANGE) BEGINNINGRANGE
				  ,COALESCE(inserted.ENDRANGE,deleted.ENDRANGE) ENDRANGE
				  ,COALESCE(inserted.PRIMESERIALNUMBERPREFIX,deleted.PRIMESERIALNUMBERPREFIX) PRIMESERIALNUMBERPREFIX
				  ,COALESCE(inserted.MEDIANUMBER,deleted.MEDIANUMBER) MEDIANUMBER
				  ,COALESCE(inserted.DOCUMENTTITLE,deleted.DOCUMENTTITLE) DOCUMENTTITLE
				  ,COALESCE(inserted.CONFIGURATIONTYPE,deleted.CONFIGURATIONTYPE) CONFIGURATIONTYPE
				   INTO @MERGE_RESULTS;
			/* MERGE command */

			SELECT @MERGED_ROWS = @@ROWCOUNT;
			SET @LOGMESSAGE = IIF(@DEBUG = 'TRUE',(SELECT(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE = 'INSERT') AS Inserted
														,(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE = 'UPDATE') AS Updated
														,(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE = 'DELETE') AS Deleted
														,(SELECT MR.ACTIONTYPE
																,MR.CAPTIVESERIALNUMBERPREFIX
																,MR.BEGINNINGRANGE
																,MR.ENDRANGE
																,MR.PRIMESERIALNUMBERPREFIX
																,MR.MEDIANUMBER
																,MR.DOCUMENTTITLE
																,MR.CONFIGURATIONTYPE
															FROM @MERGE_RESULTS AS MR FOR JSON AUTO) AS                                Modified_Rows FOR JSON PATH,WITHOUT_ARRAY_WRAPPER),'Modified Rows');
			EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = @MERGED_ROWS;
		END;
		ELSE
		BEGIN
			EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Error',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Skipping load: Row difference outside range (±10%)',@DATAVALUE = NULL;
		END;
		COMMIT;

								UPDATE STATISTICS SISWEB_OWNER.MASSNP WITH FULLSCAN;

		EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Execution completed',@DATAVALUE = NULL;
	END TRY
	BEGIN CATCH
		DECLARE @ERRORMESSAGE NVARCHAR(4000) = ERROR_MESSAGE()
			   ,@ERRORLINE    INT            = ERROR_LINE();

		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION;
		SET @LOGMESSAGE = 'LINE ' + CAST(@ERRORLINE AS VARCHAR(10)) + ': ' + @ERRORMESSAGE;
		EXEC sis_stage.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Error',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = NULL;
	END CATCH;
END;
GO

