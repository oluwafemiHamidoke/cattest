CREATE PROCEDURE [SISWEB_OWNER_STAGING].[PART_TRANSLATION_Load]
AS
BEGIN
    SET NOCOUNT ON
    BEGIN TRY

	DECLARE @LOGMESSAGE    VARCHAR(MAX);

	DECLARE @ProcName VARCHAR(200) = OBJECT_SCHEMA_NAME(@@PROCID)+'.'+OBJECT_NAME(@@PROCID)
	DECLARE @ProcessID uniqueidentifier = NewID()

	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Execution started',@DATAVALUE = NULL;


	TRUNCATE TABLE SISWEB_OWNER_STAGING.PART_TRANSLATION

	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Truncated Staging Tables',@DATAVALUE = NULL;

	DROP TABLE IF EXISTS #PARTINFO1
	DROP TABLE IF EXISTS #PARTINFO2
	DROP TABLE IF EXISTS #PARTINFO3
	DROP TABLE IF EXISTS #PARTINFO3
	DROP TABLE IF EXISTS #PARTINFO4
	DROP TABLE IF EXISTS #PARTINFO5
	DROP TABLE IF EXISTS #PARTINFO6
	DROP TABLE IF EXISTS #PARTINFO7


	CREATE TABLE #PARTINFO1
	(
	[PARTNUMBER] VARCHAR(40)
	,[ORGCODE] VARCHAR(12)
	,[PARTNAME] NVARCHAR(400)
	,LANGUAGEINDICATOR VARCHAR(2)
	)

	CREATE TABLE #PARTINFO2
	(
	[PARTNUMBER] VARCHAR(40)
	,[ORGCODE] VARCHAR(12)
	,[PARTNAME] NVARCHAR(400)
	,LANGUAGEINDICATOR VARCHAR(2)
	)

	CREATE TABLE #PARTINFO3
	(
	[PARTNUMBER] VARCHAR(40)
	,[ORGCODE] VARCHAR(12)
	,[PARTNAME] NVARCHAR(400)
	,LANGUAGEINDICATOR VARCHAR(2)
	)

	CREATE TABLE #PARTINFO4
	(
	[PARTNUMBER] VARCHAR(40)
	,[ORGCODE] VARCHAR(12)
	,[PARTNAME] NVARCHAR(400)
	,LANGUAGEINDICATOR VARCHAR(2)
	)

	CREATE TABLE #PARTINFO5
	(
	[PARTNUMBER] VARCHAR(40)
	,[ORGCODE] VARCHAR(12)
	,[PARTNAME] NVARCHAR(400)
	,LANGUAGEINDICATOR VARCHAR(2)
	)

	CREATE TABLE #PARTINFO6
	(
	[PARTNUMBER] VARCHAR(40)
	,[ORGCODE] VARCHAR(12)
	,[PARTNAME] NVARCHAR(400)
	,LANGUAGEINDICATOR VARCHAR(2)
	)
	
	CREATE TABLE #PARTINFO7
	(
	[PARTNUMBER] VARCHAR(40)
	,[ORGCODE] VARCHAR(12)
	,[PARTNAME] NVARCHAR(400)
	,LANGUAGEINDICATOR VARCHAR(2)
	)
	   
	INSERT INTO #PARTINFO1
	SELECT RELATEDPARTNUMBER,'CAT',left(max(RELATEDPARTNAME), 150),'E' FROM [SISWEB_OWNER].[LNKRELATEDPARTINFO] 
	WHERE RELATEDPARTNUMBER <> 'COMMENT'
	GROUP BY RELATEDPARTNUMBER

	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Created Temp Table #PARTINFO1 with Part Translation Data',@DATAVALUE = @@RowCount;


	INSERT INTO #PARTINFO2
	SELECT x.[PARTNUMBER]
	,x.[ORGCODE]
	,x.[PARTNAME]
	,'E'
	FROM
	(--UNION Part name list together AND rank across entire set
		SELECT
		[PARTNUMBER]
		,[ORGCODE]
		,[PARTNAME]
		,Row_Number() Over (PARTITION By [PARTNUMBER], [ORGCODE] ORDER BY [IEPUBDATE] DESC, [IESYSTEMCONTROLNUMBER] DESC, [PRIORITY] asc) RowRank
		FROM
		(
		--Get the last name FROM IE Part.
		--Requires getting the pub date to determine the last media that named the part.
		SELECT * FROM
		(
			SELECT
			gp.[IEPARTNUMBER] [PARTNUMBER]
			,[ORGCODE]
			,ISNULL(d.[IEPUBDATE], '1900-01-01') [IEPUBDATE]
			,gp.[IESYSTEMCONTROLNUMBER]
			,gp.[IESEQUENCENUMBER]
			,gp.[IEPARTNAME] [PARTNAME]
			,1 [PRIORITY] --In cases WHERE a part is equally ranked, use the priority
			,Row_Number() Over (PARTITION By gp.[IEPARTNUMBER], gp.[ORGCODE] ORDER BY ISNULL(d.[IEPUBDATE], '1900-01-01') DESC, gp.[IESYSTEMCONTROLNUMBER] DESC, gp.[IESEQUENCENUMBER]) RowRank
			FROM [SISWEB_OWNER].[LNKMEDIAIEPART] gp
			LEFT OUTER JOIN [SISWEB_OWNER].[MASMEDIA] m on gp.[MEDIANUMBER] = m.[MEDIANUMBER]
			LEFT OUTER JOIN [SISWEB_OWNER].[LNKIEDATE] d on d.[IESYSTEMCONTROLNUMBER] = gp.[IESYSTEMCONTROLNUMBER]
			WHERE gp.[IEPARTNUMBER] is not null AND gp.[ORGCODE] is not null AND gp.[IEPARTNAME] is not null  AND m.MEDIAORIGIN <> 'SJ'
		) x 
		WHERE RowRank = 1
	
	UNION All --No need to worry about DISTINCT.  Rank will take care of this on outer query.
	
	--Get the last name FROM Concist List.
	--Requires getting the pub date to determine the last media that named the part.
	SELECT  *
	FROM
	(
	SELECT
		cl.[PARTNUMBER]
		,cl.[ORGCODE]
		,ISNULL(gp_data.[IEPUBDATE], '1900-01-01') [IEPUBDATE]
		,cl.[IESYSTEMCONTROLNUMBER]
		,cl.[PARTSEQUENCENUMBER]
		,cl.[PARTNAME]
		,2 [PRIORITY] --In cases WHERE a part is equally ranked, use the priority
		,Row_Number() Over (PARTITION By cl.[PARTNUMBER], cl.[ORGCODE] ORDER BY ISNULL(gp_data.[IEPUBDATE], '1900-01-01') DESC, cl.[IESYSTEMCONTROLNUMBER] DESC, cl.[PARTSEQUENCENUMBER] desc) RowRank
		FROM [SISWEB_OWNER].[LNKCONSISTLIST] cl
		LEFT OUTER JOIN
		(
		SELECT
		case m.[MEDIASOURCE]
		when 'N'
		then gp.[IESYSTEMCONTROLNUMBER]
		when 'A'
		then gp.[IESYSTEMCONTROLNUMBER]
		else gp.[IECONTROLNUMBER] end [CLIESYSTEMCONTROLNUMBER], d.[IEPUBDATE], m.MEDIAORIGIN
		FROM [SISWEB_OWNER].[LNKMEDIAIEPART] gp
		LEFT OUTER JOIN [SISWEB_OWNER].[MASMEDIA] m on gp.[MEDIANUMBER] = m.[MEDIANUMBER]
		LEFT OUTER JOIN [SISWEB_OWNER].[LNKIEDATE] d on d.[IESYSTEMCONTROLNUMBER] = gp.[IESYSTEMCONTROLNUMBER]
		) gp_data on cl.[IESYSTEMCONTROLNUMBER] = gp_data.[CLIESYSTEMCONTROLNUMBER]
		WHERE cl.[PARTNUMBER] is not null AND cl.[ORGCODE] is not null AND cl.[PARTNAME] is not null AND gp_data.MEDIAORIGIN <> 'SJ'
	) x WHERE RowRank = 1 
	) x WHERE PARTNUMBER <> 'COMMENT' 
	) x
	LEFT JOIN #PARTINFO1 P
	ON x.PARTNUMBER=P.PARTNUMBER 
	WHERE x.RowRank = 1
	AND P.PARTNUMBER IS NULL
	
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Created Temp Table #PARTINFO2 with Part Translation Data',@DATAVALUE = @@RowCount;
	
	INSERT INTO #PARTINFO3
	SELECT z.*,'E' FROM
	(
	SELECT DISTINCT y.PARTNUMBER, 'CAT' AS ORGCODE,y.PARTNAME
	FROM
	(
	SELECT
		PARTNUMBER,
		PARTNAME,
		Row_Number() Over (PARTITION By PARTNUMBER ORDER BY ISNULL(LASTMODIFIEDDATE, '1900-01-01') DESC, SERIALNUMBER DESC, PARTSEQUENCENUMBER desc) RowRank
		FROM
		(
		SELECT SERIALNUMBER, PARTSEQUENCENUMBER, ISNULL(LASTMODIFIEDDATE, '1900-01-01') as LASTMODIFIEDDATE, PARTNUMBER, PARTNAME
			FROM [SISWEB_OWNER].[LNKASSHIPPEDPRODUCTDETAILS]
			WHERE (isValidPartNumber is null or isValidPartNumber = '0')  AND isValidSerialNumber is null
			AND PARTNUMBER is not null AND PARTNUMBER != '' AND PARTNAME is not null
	
			UNION
	
			SELECT SERIALNUMBER, PARTSEQUENCENUMBER, ISNULL(LASTMODIFIEDDATE, '1900-01-01') as LASTMODIFIEDDATE, PARTNUMBER, PARTNAME
			FROM [SISWEB_OWNER].[LNKASSHIPPEDPRODUCTDETAILS2]
			WHERE isValidPartNumber is null AND isValidSerialNumber is null
			AND PARTNUMBER is not null AND PARTNUMBER != '' AND PARTNAME is not null
	
			UNION
	
			SELECT SERIALNUMBER, PARTSEQUENCENUMBER, ISNULL(LASTMODIFIEDDATE, '1900-01-01') as LASTMODIFIEDDATE, PARTNUMBER, PARTNAME
			FROM [SISWEB_OWNER].[LNKASSHIPPEDPRODUCTDETAILS3]
			WHERE isValidPartNumber is null AND isValidSerialNumber is null
			AND PARTNUMBER is not null AND PARTNUMBER != '' AND PARTNAME is not null
	
			UNION
	
			SELECT SERIALNUMBER, PARTSEQUENCENUMBER, ISNULL(UPDATEDATETIME, '1900-01-01') as LASTMODIFIEDDATE, PARTNUMBER, PARTNAME
			FROM [SISWEB_OWNER].[SIS2ASSHIPPEDENGINE]
			WHERE isValidPartNumber is null AND isValidSerialNumber is null
			AND PARTNUMBER is not null AND PARTNUMBER != '' AND PARTNAME is not null
		) x
	) y
	WHERE y.RowRank=1
	) z
	LEFT JOIN 
	(
	SELECT * FROM #PARTINFO1
	UNION
	SELECT * FROM #PARTINFO2
	) P
	ON z.PARTNUMBER=P.PARTNUMBER 
	WHERE P.PARTNUMBER IS NULL
	
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Created Temp Table #PARTINFO3 with Part Translation Data',@DATAVALUE = @@RowCount;
	
	INSERT INTO #PARTINFO4
	SELECT z.*,'E' FROM
	(
		SELECT 	t.PARTNUMBER,
		'CAT' AS ORGCODE,
		t.Part_Name		
		FROM
		(
			SELECT NPR.PARTNUMBER,NPR.PARTNUMBERDESCRIPTION AS Part_Name,
			RANK() OVER(PARTITION BY NPR.PARTNUMBER ORDER BY NPR.PRIMARYSEQNO DESC) AS RowRank -- there are multiple descriptions for each partnumber, we take the latest
			FROM SISWEB_OWNER.LNKNPRINFO AS NPR
			WHERE NPR.PARTNUMBER IS NOT NULL 
			AND NPR.PARTNUMBERDESCRIPTION IS NOT NULL 
		) AS t
	WHERE t.RowRank=1
	) z
	LEFT JOIN 
	(
	SELECT * FROM #PARTINFO1
	UNION
	SELECT * FROM #PARTINFO2
	UNION
	SELECT * FROM #PARTINFO3
	) P
	ON z.PARTNUMBER=P.PARTNUMBER 
	WHERE P.PARTNUMBER IS NULL;
	
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Created Temp Table #PARTINFO4 with Part Translation Data',@DATAVALUE = @@RowCount;
	
	INSERT INTO #PARTINFO5
	SELECT z.*,'E' FROM
	(
		SELECT PARTNUMBER,'CAT' AS ORGCODE,Part_Name
		FROM 
		(
			SELECT DISTINCT PARTNUMBER,
			PARTNAME [Part_Name],
			ROW_NUMBER() OVER(PARTITION BY sc.PARTNUMBER ORDER BY SCPART_ID DESC) AS RowRank
			FROM EMP_STAGING.SCPART sc
		) a
		WHERE a.RowRank=1
	) z
		LEFT JOIN 
	(
	SELECT * FROM #PARTINFO1
	UNION
	SELECT * FROM #PARTINFO2
	UNION
	SELECT * FROM #PARTINFO3
	UNION
	SELECT * FROM #PARTINFO4
	) P
	ON z.PARTNUMBER=P.PARTNUMBER 
	WHERE P.PARTNUMBER IS NULL;
		
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Created Temp Table #PARTINFO5 with Part Translation Data',@DATAVALUE = @@RowCount;
	
	INSERT INTO #PARTINFO6 
	SELECT DISTINCT PT.PARTNUMBER,
			PT.ORGCODE,
			TSPN.TRANSLATEDPARTNAME,
			TSPN.LANGUAGEINDICATOR
		FROM
		(
		SELECT * FROM #PARTINFO1
		UNION
		SELECT * FROM #PARTINFO2
		UNION
		SELECT * FROM #PARTINFO3
		UNION
		SELECT * FROM #PARTINFO4
		UNION
		SELECT * FROM #PARTINFO5
		) 
		AS PT
		JOIN SISWEB_OWNER.LNKTRANSLATEDSPN AS TSPN ON TSPN.PARTNAME = PT.PARTNAME
		JOIN sis_stage.Language AS L ON
			L.Legacy_Language_Indicator = TSPN.LANGUAGEINDICATOR
			AND L.Default_Language = 1
		WHERE TSPN.LANGUAGEINDICATOR <> 'E';
	
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Created Temp Table #PARTINFO6 with Part Translation Data',@DATAVALUE = @@RowCount;
	
	INSERT INTO #PARTINFO7 
	SELECT	distinct 
		w.PARTNUMBER ,
		w.ORGCODE,
		w.PARTNAME,
		w.LANGUAGEINDICATOR
		FROM

(
	SELECT	distinct 
		y.PARTNUMBER ,
			y.ORGCODE,
			y.PARTNAME,
			'J' AS LANGUAGEINDICATOR,
			Row_Number() Over (PARTITION By y.[PARTNUMBER] ORDER BY ISNULL(y.LASTMODIFIEDDATE, '1900-01-01') DESC)RowRank
	FROM
		(
		SELECT 
			sisj.PARTNUMBER ,
			sisj.ORGCODE,
			sisj.LASTMODIFIEDDATE,
			sisj.PARTNAME		
			FROM
			(
				SELECT
				x.PARTNAME
				,x.PARTNUMBER
				,x.LASTMODIFIEDDATE,x.ORGCODE,x.RowRank
				FROM 
					(
					SELECT
					Row_Number() Over (PARTITION By cl.[PARTNUMBER] ORDER BY ISNULL(cl.LASTMODIFIEDDATE, '1900-01-01') DESC, cl.[IESYSTEMCONTROLNUMBER] DESC, cl.[PARTSEQUENCENUMBER] desc) RowRank
					,cl.PARTNAME
					,cl.PARTNUMBER
					,gp0.ORGCODE
					, ISNULL(cl.LASTMODIFIEDDATE, '1900-01-01') LASTMODIFIEDDATE
					FROM [SISWEB_OWNER].[LNKCONSISTLIST] cl
					inner join
						(SELECT
						case m.[MEDIASOURCE] when 'A' then gp1.[IESYSTEMCONTROLNUMBER] else gp1.[IECONTROLNUMBER] end [CLIESYSTEMCONTROLNUMBER],m.MEDIAORIGIN,gp1.ORGCODE
						FROM [SISWEB_OWNER].[LNKMEDIAIEPART] gp1
						inner join [SISWEB_OWNER].[MASMEDIA] m on gp1.[MEDIANUMBER] = m.[MEDIANUMBER]
						WHERE m.MEDIAORIGIN = 'SJ'
					) gp0
					on cl.[IESYSTEMCONTROLNUMBER] = gp0.[CLIESYSTEMCONTROLNUMBER]
					WHERE  cl.PARTNAME is not null AND cl.PARTNUMBER is not null
			)x
			WHERE RowRank =1
		UNION
		SELECT
			z.PARTNAME
			,z.PARTNUMBER
			,z.LASTMODIFIEDDATE,z.ORGCODE,z.RowRank
			FROM 
			(
				SELECT Row_Number() Over (PARTITION By gp2.[IEPARTNUMBER] ORDER BY ISNULL(gp2.LASTMODIFIEDDATE, '1900-01-01') DESC, 
				gp2.[IESYSTEMCONTROLNUMBER] desc) RowRank
				,[gp2].[IEPARTNAME] PARTNAME, gp2.[IEPARTNUMBER] PARTNUMBER, gp2.ORGCODE, gp2.LASTMODIFIEDDATE LASTMODIFIEDDATE
				FROM [SISWEB_OWNER].[LNKMEDIAIEPART] gp2
				inner join [SISWEB_OWNER].[MASMEDIA] m on gp2.[MEDIANUMBER] = m.[MEDIANUMBER]
				WHERE m.MEDIAORIGIN = 'SJ'
				AND gp2.[IEPARTNUMBER] is not null AND gp2.[IEPARTNAME] is not null
			)z 
			WHERE RowRank =1
		) sisj
			WHERE sisj.RowRank = 1 and
			sisj.PARTNAME is not null AND 
			sisj.PARTNAME not like  '%?%' AND 
			sisj.PARTNAME<> '*'
			
			) y
		LEFT JOIN 
			(
			SELECT * FROM #PARTINFO1
			UNION
			SELECT * FROM #PARTINFO2
			UNION
			SELECT * FROM #PARTINFO3
			UNION
			SELECT * FROM #PARTINFO4
			UNION
			SELECT * FROM #PARTINFO5
			UNION
			SELECT * FROM #PARTINFO6
			) P
		ON y.PARTNUMBER=P.PARTNUMBER 
		WHERE P.PARTNUMBER IS NULL
		)w
		WHERE RowRank=1
	
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Created Temp Table #PARTINFO7 with Part Translation Data',@DATAVALUE = @@RowCount;
	
	INSERT INTO SISWEB_OWNER_STAGING.PART_TRANSLATION
	SELECT * FROM #PARTINFO1 WHERE PARTNUMBER IS NOT NULL AND PARTNAME IS NOT NULL
	UNION
	SELECT * FROM #PARTINFO2 WHERE PARTNUMBER IS NOT NULL AND PARTNAME IS NOT NULL
	UNION
	SELECT * FROM #PARTINFO3 WHERE PARTNUMBER IS NOT NULL AND PARTNAME IS NOT NULL
	UNION
	SELECT * FROM #PARTINFO4 WHERE PARTNUMBER IS NOT NULL AND PARTNAME IS NOT NULL
	UNION
	SELECT * FROM #PARTINFO5 WHERE PARTNUMBER IS NOT NULL AND PARTNAME IS NOT NULL
	UNION
	SELECT * FROM #PARTINFO6 WHERE PARTNUMBER IS NOT NULL AND PARTNAME IS NOT NULL
	UNION
	SELECT * FROM #PARTINFO7 WHERE PARTNUMBER IS NOT NULL AND PARTNAME IS NOT NULL
	
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Loaded data to SISWEB_OWNER_STAGING.PART_TRANSLATION Table',@DATAVALUE = @@RowCount;
	
	EXEC sis_stage.WriteLog @PROCESSID = @ProcessID, @LOGTYPE = 'Information', @NAMEOFSPROC = @ProcName, @LOGMESSAGE = 'Execution completed' , @DATAVALUE = NULL;
	
	
	END TRY
	
	BEGIN CATCH
	
	DECLARE @ERRORMESSAGE NVARCHAR(4000) = ERROR_MESSAGE()
	DECLARE @ERROELINE INT= ERROR_LINE()
	
	SET @LOGMESSAGE = FORMATMESSAGE('LINE '+ CAST(@ERROELINE AS VARCHAR(10)) + ': ' + @ERRORMESSAGE);
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Error',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = NULL;
	
	END CATCH
	
	
END
