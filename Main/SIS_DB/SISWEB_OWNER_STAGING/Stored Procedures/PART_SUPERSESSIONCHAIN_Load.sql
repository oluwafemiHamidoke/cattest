CREATE PROCEDURE [SISWEB_OWNER_STAGING].[PART_SUPERSESSIONCHAIN_Load]
AS
BEGIN
    SET NOCOUNT ON
    BEGIN TRY

	DECLARE @LOGMESSAGE    VARCHAR(MAX);

	DECLARE @ProcName VARCHAR(200) = OBJECT_SCHEMA_NAME(@@PROCID)+'.'+OBJECT_NAME(@@PROCID)
	DECLARE @ProcessID uniqueidentifier = NewID()

	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Execution started',@DATAVALUE = NULL;

	TRUNCATE TABLE SISWEB_OWNER_STAGING.PART_SUPERSESSIONCHAIN

	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Truncated Staging Table',@DATAVALUE = NULL;

		
	DROP TABLE IF EXISTS #PART_SUPERSESSIONCHAIN
	CREATE TABLE #PART_SUPERSESSIONCHAIN
	(
		PART_SUPERSESSIONCHAIN_ID INT IDENTITY(1,1),
		[PARTNUMBER] VARCHAR(40) NOT NULL,
		[CHAIN] VARCHAR(4000) NOT NULL,
		CONSTRAINT [PK_PARTNUMBER_PART_SUPERSESSIONCHAIN_Temp_Table] PRIMARY KEY CLUSTERED (PART_SUPERSESSIONCHAIN_ID)
	)
	
	INSERT INTO #PART_SUPERSESSIONCHAIN ([PARTNUMBER],[CHAIN])
	SELECT TRIM(C.VALUE) AS VALUE, A.CHAIN
	FROM 
		(
			SELECT DISTINCT * FROM SISWEB_OWNER.SUPERSESSIONCHAINS
		) A
		CROSS APPLY STRING_SPLIT(CHAIN,'|') C
	
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Created Temp Table with data for Part Chain Relation',@DATAVALUE = @@RowCount;
	
	
	INSERT INTO SISWEB_OWNER_STAGING.PART_SUPERSESSIONCHAIN ([PARTNUMBER],[CHAIN])
	SELECT t1.PARTNUMBER,t1.CHAIN FROM #PART_SUPERSESSIONCHAIN t1
		WHERE NOT EXISTS 
		(
			SELECT 1 FROM #PART_SUPERSESSIONCHAIN t2 
			WHERE t1.PART_SUPERSESSIONCHAIN_ID<>t2.PART_SUPERSESSIONCHAIN_ID
			AND t1.PARTNUMBER=t2.PARTNUMBER
			AND CHARINDEX(t1.CHAIN,t2.CHAIN)>0
		)
	
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Information',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = 'Loaded SISWEB_OWNER_STAGING.PART_SUPERSESSIONCHAIN after excluding chains containing in other chains',@DATAVALUE = @@RowCount;
	
	
	EXEC sis_stage.WriteLog @PROCESSID = @ProcessID, @LOGTYPE = 'Information', @NAMEOFSPROC = @ProcName, @LOGMESSAGE = 'Execution completed' , @DATAVALUE = NULL;
	
	
	END TRY
	
	BEGIN CATCH
	
	DECLARE @ERRORMESSAGE NVARCHAR(4000) = ERROR_MESSAGE()
	DECLARE @ERROELINE INT= ERROR_LINE()
	
	SET @LOGMESSAGE = FORMATMESSAGE('LINE '+ CAST(@ERROELINE AS VARCHAR(10)) + ': ' + @ERRORMESSAGE);
	EXEC [sis_stage].WriteLog @PROCESSID = @ProcessID,@LOGTYPE = 'Error',@NAMEOFSPROC = @ProcName,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = NULL;
	
	END CATCH
	
	
END
