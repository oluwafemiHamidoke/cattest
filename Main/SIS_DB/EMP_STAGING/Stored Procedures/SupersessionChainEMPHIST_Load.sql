CREATE PROCEDURE [EMP_STAGING].[SupersessionChainEMPHIST_Load]
AS
BEGIN
    SET NOCOUNT ON
    BEGIN TRY

        Declare @ProcName VARCHAR(200) = OBJECT_SCHEMA_NAME(@@PROCID)+'.'+OBJECT_NAME(@@PROCID),
                @ProcessID uniqueidentifier = NewID()


        Insert into [sis_stage].[Log] ([ProcessID],[LogDateTime],[LogType],[NameofSproc],[LogMessage],[DataValue])
        Values (@ProcessID, GETDATE(), 'Information', @ProcName, 'Execution started', NULL)
        --detect change if yes #temp hist

        INSERT INTO EMP_STAGING.SCPART(SESSIONID, AGGREGATEDTIMESTAMP, DATASOURCE, HASALTERNATES, HASSUPERSESSION, HASXREF, ORGCODE, PARTNAME, PARTNUMBER, SERVICEABLE,
        SOURCENAME, DOMAINPATH,CREATEDDATE, MODIFIEDDATE, TYPE, WBMSOURCEDESCRIPTION, WBMSOURCEIDENTIFIER, WBMLOADACTION)
        SELECT 1, AGGREGATEDTIMESTAMP, 'DEFAULT', HASALTERNATES, HASSUPERSESSION, HASXREF, ORGNAME, PARTNAME, PARTNUMBER, SERVICEABLE, SOURCENAME, NULL,
        CREATESTAMPA2, MODIFYSTAMPA2,NULL, NULL, NULL, 'DEFAULT'  FROM EMP_STAGING.SCPARTHIST


        INSERT INTO [EMP_STAGING].[SCSUPERSEDEDPART](SESSIONID,PARTNUMBER, ORGCODE, RELATIONSHIPTYPE, REPLACEMENTORGCODE, REPLACEMENTPARTNUMBER, DOMAINPATH, CREATEDDATE,
        MODIFIEDDATE, TYPE, WBMSOURCEDESCRIPTION, WBMSOURCEIDENTIFIER, WBMLOADACTION)
        SELECT 1, PARTNUMBER, PARTORGNAME, UPPER(RELATIONSHIPTYPE), REPLACEMENTORGNAME, REPLACEMENTPARTNUMBER, NULL, CREATESTAMPA2, MODIFYSTAMPA2,NULL, NULL, NULL,
        'DEFAULT' FROM [EMP_STAGING].[SCSUPERSEDEDPARTHIST]


END TRY

    BEGIN CATCH

        DECLARE @ERRORMESSAGE NVARCHAR(4000) = ERROR_MESSAGE(),
                @ERROELINE INT= ERROR_LINE()

        Insert into [sis_stage].[Log] ([ProcessID],[LogDateTime],[LogType],[NameofSproc],[LogMessage],[DataValue])
        Values (@ProcessID, GETDATE(), 'Error', @ProcName, 'LINE '+ CAST(@ERROELINE AS VARCHAR(10)) + ': ' + @ERRORMESSAGE, NULL)

    END CATCH
END
