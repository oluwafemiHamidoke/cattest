CREATE PROCEDURE [EMP_STAGING].[LNKPARTSIESNP_Insert]
AS
BEGIN
    SET NOCOUNT ON
    BEGIN TRY

         Declare @ProcName VARCHAR(200) = OBJECT_SCHEMA_NAME(@@PROCID)+'.'+OBJECT_NAME(@@PROCID),
                 @ProcessID uniqueidentifier = NewID(),
                 @LOGMESSAGE  VARCHAR(MAX);

         DECLARE @FULLTABLENAME_FOR_LNKPARTSIESNP     sysname = 'EMP_STAGING.LNKPARTSIESNP'
                ,@CURRENT_VERSION                     BIGINT  = CHANGE_TRACKING_CURRENT_VERSION();

        BEGIN TRANSACTION;
        EXEC sis_stage.WriteLog @PROCESSID = @ProcessID, @LOGTYPE = 'Information', @NAMEOFSPROC = @ProcName, @LOGMESSAGE = 'Execution Started', @DATAVALUE = NULL;

        --Load
        Insert into [EMP_STAGING].[LNKPARTSIESNP]
        (
        [MEDIANUMBER],
        [IESYSTEMCONTROLNUMBER],
        [SNP],
        [BEGINNINGRANGE],
        [ENDRANGE],
        [SNPTYPE],
        [LASTMODIFIEDDATE]
        )
        SELECT DISTINCT
            L.MEDIANUMBER,
            L.IESYSTEMCONTROLNUMBER,
            E.SNP,
            1 as BEGINNINGRANGE,
            99999 as ENDRANGE,
            'P' as SNPTYPE,
            GETDATE() AS LASTMODIFIEDDATE
        FROM [EMP_STAGING].[LNKIEPRODUCTINSTANCE] L
        INNER JOIN [EMP_STAGING].[EMPPRODUCTINSTANCE] E ON E.EMPPRODUCTINSTANCE_ID = L.EMPPRODUCTINSTANCE_ID
        LEFT OUTER JOIN [EMP_STAGING].[LNKPARTSIESNP] LP ON LP.MEDIANUMBER = L.MEDIANUMBER
            AND LP.IESYSTEMCONTROLNUMBER = L.IESYSTEMCONTROLNUMBER AND LP.SNP = E.SNP
        WHERE LP.MEDIANUMBER IS NULL AND LP.IESYSTEMCONTROLNUMBER IS NULL AND LP.SNP IS NULL

        EXEC sis_stage.WriteLog @PROCESSID = @ProcessID, @LOGTYPE = 'Information', @NAMEOFSPROC = @ProcName, @LOGMESSAGE = '[EMP_STAGING].[LNKPARTSIESNP] Loaded', @DATAVALUE = @@RowCount;
        EXEC EMP_STAGING._setLastSynchVersion @FULLTABLENAME_FOR_LNKPARTSIESNP, @CURRENT_VERSION;

        COMMIT;
        EXEC sis_stage.WriteLog @PROCESSID = @ProcessID, @LOGTYPE = 'Information', @NAMEOFSPROC = @ProcName, @LOGMESSAGE = 'Execution completed', @DATAVALUE = NULL;
    END TRY

    BEGIN CATCH

        DECLARE @ERRORMESSAGE NVARCHAR(4000) = ERROR_MESSAGE(),
                @ERRORLINE    INT            = ERROR_LINE()
               ,@ERRORNUM     INT            = ERROR_NUMBER();

        IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION;
		SET @LOGMESSAGE = FORMATMESSAGE('LINE %s: %s', CAST(@ERRORLINE AS VARCHAR(10)), CAST(@ERRORMESSAGE AS VARCHAR(4000)));
        EXEC sis_stage.WriteLog @PROCESSID = @ProcessID, @LOGTYPE = 'Error', @NAMEOFSPROC = @ProcName, @LOGMESSAGE = @LOGMESSAGE, @DATAVALUE = @ERRORNUM;
    END CATCH
END
