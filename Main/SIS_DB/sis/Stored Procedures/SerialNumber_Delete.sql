
-- =============================================
-- Author:      Davide Moraschi
-- Create Date: 20200806
-- Description: Merge load from SISWEB_OWNER.LNKSERIALPART
-- Modified By: Kishor Padmanabhan
-- Modified At: 20220905
-- Modified Reason: Include TestDate and ShippedDate columns in SerialNumber table
-- Work Item  : 22348
-- =============================================
CREATE PROCEDURE sis.SerialNumber_Delete (@FORCE_LOAD BIT = 'FALSE'
										,@DEBUG      BIT = 'FALSE') 
AS
BEGIN
	SET XACT_ABORT,NOCOUNT ON;
	BEGIN TRY
		DECLARE @PROCNAME    VARCHAR(200)     = OBJECT_SCHEMA_NAME(@@PROCID) + '.' + OBJECT_NAME(@@PROCID)
			   ,@MERGED_ROWS BIGINT           = 0
			   ,@PROCESSID   UNIQUEIDENTIFIER = NEWID()
			   ,@LOGMESSAGE  VARCHAR(MAX);

		DECLARE @MERGE_RESULTS TABLE (ACTIONTYPE   NVARCHAR(10)
									 ,SerialNumber CHAR(8) NOT NULL
									 ,Build_Date   DATETIME2(0)
									 ,TestDate   DATETIME2(0)
									 ,ShippedDate   DATETIME2(0));

		BEGIN TRANSACTION;
		EXEC sis.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Execution started',@DATAVALUE = NULL;

		DROP TABLE IF EXISTS #SERIALNUMBERS;
		SELECT A.SERIALNUMBER
		INTO #SERIALNUMBERS
		FROM SISWEB_OWNER.LNKASSHIPPEDPRODUCT AS A
		UNION
		SELECT C.SERIALNUMBER FROM SISWEB_OWNER.MASEPSTESTCELLDATA AS C
		UNION
		SELECT S.SERIALNUMBER AS SerialNumber FROM SISWEB_OWNER.LNKSERIALPART AS S;

		/* MERGE command */
		WITH SerialNumber
			 AS (SELECT SN.SERIALNUMBER,COALESCE(A.BUILDDATE,C.BUILT) AS BUILDDATE, C.TESTDATE AS TESTDATE, C.SHIPPED AS SHIPPED
				 FROM #SERIALNUMBERS AS SN
					  LEFT OUTER JOIN SISWEB_OWNER.LNKASSHIPPEDPRODUCT AS A ON A.SERIALNUMBER = SN.SERIALNUMBER
					  LEFT OUTER JOIN SISWEB_OWNER.MASEPSTESTCELLDATA AS C ON C.SERIALNUMBER = SN.SERIALNUMBER
					  LEFT OUTER JOIN SISWEB_OWNER.LNKSERIALPART AS S ON S.SERIALNUMBER = SN.SERIALNUMBER)
			 MERGE INTO sis.SerialNumber tgt
			 USING SerialNumber AS src
			 ON src.SERIALNUMBER = tgt.SerialNumber
			 --WHEN NOT MATCHED BY TARGET
			 --   THEN
			 --   INSERT(SerialNumber)
			 --   VALUES (src.SerialNumber) 
			 WHEN NOT MATCHED BY SOURCE
				   THEN DELETE
			 OUTPUT $ACTION,COALESCE(inserted.SerialNumber,deleted.SerialNumber) SerialNumber
							,COALESCE(inserted.Build_Date,deleted.Build_Date) Build_Date
							,COALESCE(inserted.TestDate,deleted.TestDate) TestDate
							,COALESCE(inserted.ShippedDate,deleted.ShippedDate) ShippedDate
					INTO @MERGE_RESULTS;

		/* MERGE command */
		SELECT @MERGED_ROWS = @@ROWCOUNT;

		SET @LOGMESSAGE = IIF(@DEBUG = 'TRUE',
		(
			SELECT
				(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE = 'INSERT') AS Inserted,
				(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE = 'UPDATE') AS Updated,
				(SELECT COUNT(*) FROM @MERGE_RESULTS AS MR WHERE MR.ACTIONTYPE = 'DELETE') AS Deleted,
			(
				SELECT MR.ACTIONTYPE,MR.SerialNumber,MR.Build_Date, MR.TestDate, MR.ShippedDate
				FROM @MERGE_RESULTS AS MR FOR JSON AUTO
			) AS Modified_Rows FOR JSON PATH,WITHOUT_ARRAY_WRAPPER
		),'Modified Rows');
		EXEC sis.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = @MERGED_ROWS;
		COMMIT;
		EXEC sis.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Information',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = 'Execution completed',@DATAVALUE = NULL;
		DROP TABLE IF EXISTS #SERIALNUMBERS;
	END TRY
	BEGIN CATCH
		DECLARE @ERRORMESSAGE NVARCHAR(4000) = ERROR_MESSAGE()
			   ,@ERRORLINE    INT            = ERROR_LINE()
			   ,@ERRORNUM     INT            = ERROR_NUMBER();
		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION;
		SET @LOGMESSAGE = FORMATMESSAGE('LINE %s: %s',CAST(@ERRORLINE AS VARCHAR(10)),CAST(@ERRORMESSAGE AS VARCHAR(4000)));
		EXEC sis.WriteLog @PROCESSID = @PROCESSID,@LOGTYPE = 'Error',@NAMEOFSPROC = @PROCNAME,@LOGMESSAGE = @LOGMESSAGE,@DATAVALUE = @ERRORNUM;
	END CATCH;
END;