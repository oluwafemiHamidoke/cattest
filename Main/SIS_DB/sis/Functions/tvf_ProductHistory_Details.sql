--BEGIN TRANSACTION; --tvf_ProductHistory_Details next gen
CREATE FUNCTION sis.tvf_ProductHistory_Details(@LANGUAGE_CODE VARCHAR(2)    = 'en'
											   ,@JSON          NVARCHAR(MAX))
RETURNS @RETURN_DATASET TABLE
	(PARTNUMBER               VARCHAR(20) NOT NULL
	,PRIMARYSEQNO             INT NOT NULL
	,SEQUENCENUMBER           INT NOT NULL
	,RECORDTYPE               CHAR(1)
	,PARTNUMBERDESCRIPTION    VARCHAR(MAX) NULL
	,COLUMNDATA_T2            VARCHAR(MAX) NULL
	,COLUMNDATA_T3            VARCHAR(MAX) NULL
	,QUANTITYRECTYPE5         SMALLINT NULL
	,SERIALNUMBERSYMBOL       CHAR(1) NULL
	,SERIALNUMBERPREFIX       VARCHAR(4) NULL
	,EFFECTIVESERIALNUMBER    VARCHAR(5) NULL
	,DISCONTINUEDSERIALNUMBER VARCHAR(5) NULL
	,QUANTITYRECTYPE6         SMALLINT NULL
	,GROUPNUMBER              VARCHAR(10) NULL
	,ENGINEERINGCHANGE        VARCHAR(5) NULL
	,NPRINDICATOR             VARCHAR(20)) 
AS
	BEGIN
		DECLARE @PARTNUMBER               VARCHAR(20)
			   ,@PRIMARYSEQNO             INT
			   ,@PARTNUMBERDESCRIPTION    VARCHAR(MAX)
			   ,@PACKAGEQUANTITY          VARCHAR(8)
			   ,@NPRINDICATOR             VARCHAR(20)
			   ,@RECORDTYPE               CHAR(1)
			   ,@COLUMNDATA_T2            VARCHAR(MAX)
			   ,@COLUMNDATA_T3            VARCHAR(MAX)
			   ,@COLUMNDATA_T4            VARCHAR(MAX)
			   ,@SEQUENCENUMBER_T2        INT
			   ,@SEQUENCENUMBER_T3        INT
			   ,@QUANTITYRECTYPE5         SMALLINT
			   ,@SERIALNUMBERSYMBOL       CHAR(1)
			   ,@SERIALNUMBERPREFIX       VARCHAR(4)
			   ,@EFFECTIVESERIALNUMBER    VARCHAR(5)
			   ,@DISCONTINUEDSERIALNUMBER VARCHAR(5)
			   ,@QUANTITYRECTYPE6         SMALLINT
			   ,@GROUPNUMBER              VARCHAR(10)
			   ,@ENGINEERINGCHANGE        VARCHAR(5)
			   ,@ROW_NUM_T2               INT
			   ,@ROW_NUM_T3               INT
			   ,@LF                       BIT
			   ,@FIRSTROW                 BIT          = 'TRUE'
			   ,@ROWCOUNTER				  INT		   = 0;

		SELECT @PARTNUMBER = PARTNUMBER FROM OPENJSON(@JSON) WITH(PARTNUMBER VARCHAR(20) '$');

        DECLARE @DEFAULT_ORGCODE VARCHAR(12) = SISWEB_OWNER_STAGING._getDefaultORGCODE();
		DECLARE T1_CURSOR CURSOR LOCAL FAST_FORWARD
		FOR SELECT T1.PRIMARYSEQNO
				  ,T1.PARTNUMBERDESCRIPTION
				  ,T1.PACKAGEQUANTITY
				  ,T1.NPRINDICATOR
			  FROM SISWEB_OWNER.LNKNPRINFO AS T1
			  WHERE T1.PARTNUMBER = @PARTNUMBER
			  ORDER BY T1.PRIMARYSEQNO;

		OPEN T1_CURSOR;
		FETCH NEXT FROM T1_CURSOR INTO @PRIMARYSEQNO
									  ,@PARTNUMBERDESCRIPTION
									  ,@PACKAGEQUANTITY
									  ,@NPRINDICATOR;

		/*LOOP CURSOR T1*/
		WHILE @@FETCH_STATUS = 0
		BEGIN
			DECLARE T2_CURSOR CURSOR LOCAL FAST_FORWARD
			FOR
				WITH T23_LINES
					 AS(SELECT 2 AS    RECORDTYPE
						  ,'' AS COLUMNDATA
						  ,NULL AS SEQUENCENUMBER
						  ,0 AS ROW_NUM
						  UNION SELECT T2.RECORDTYPE
							  ,REPLACE(T2.COLUMNDATA,'*','') AS                      COLUMNDATA
							  ,T2.SEQUENCENUMBER
							  ,SUM(CASE
									   WHEN CHARINDEX('*OR',T2.COLUMNDATA) > 0 THEN 1
								   ELSE 0
								   END) OVER(PARTITION BY T2.PRIMARYSEQNO
														 ,T2.RECORDTYPE
							   ORDER BY T2.PRIMARYSEQNO ROWS UNBOUNDED PRECEDING) AS ROW_NUM
						  FROM SISWEB_OWNER.LNKNPRINFORECTYPE23 AS T2
						  WHERE T2.PRIMARYSEQNO = @PRIMARYSEQNO)
					 SELECT T.ROW_NUM
						   ,MIN(T.SEQUENCENUMBER) AS          SEQUENCENUMBER
						   ,REPLACE(TRIM('|' FROM CASE
								WHEN @PARTNUMBERDESCRIPTION IS NOT NULL THEN @PARTNUMBERDESCRIPTION + '|'
							ELSE ''
							END + STRING_AGG(CASE
												 WHEN T.RECORDTYPE = 2 THEN T.COLUMNDATA
											 ELSE NULL
											 END,'|') WITHIN GROUP(ORDER BY T.SEQUENCENUMBER) 
													 + CASE
														   WHEN @PACKAGEQUANTITY IS NOT NULL THEN '|Package: ' + CAST(CAST(@PACKAGEQUANTITY AS INT) AS VARCHAR)
													   ELSE ''
													   END),'||','|') AS COLUMNDATA_T2
						   ,STRING_AGG(CASE
										   WHEN T.RECORDTYPE = 3 THEN T.COLUMNDATA
									   ELSE NULL
									   END,'|') WITHIN GROUP(ORDER BY T.SEQUENCENUMBER)
							AS                                COLUMNDATA_T3
					   FROM T23_LINES AS T
					   GROUP BY T.ROW_NUM
					 ORDER BY T.ROW_NUM;

			DECLARE T3_CURSOR CURSOR LOCAL FAST_FORWARD
			FOR
				WITH T456_LINES
					 AS(SELECT _T3.SEQUENCENUMBER
							  ,SUM(_T3.HAS_ASTERISK + _T3.DESC_RECTYPE_CHANGE) OVER(
							   ORDER BY _T3.SEQUENCENUMBER ROWS UNBOUNDED PRECEDING) AS ROW_NUM
							  ,_T3.COLUMNDATA
							  ,_T3.RECORDTYPE
							  ,_T3.QUANTITYRECTYPE5
							  ,_T3.SERIALNUMBERSYMBOL
							  ,_T3.SERIALNUMBERPREFIX
							  ,_T3.EFFECTIVESERIALNUMBER
							  ,_T3.DISCONTINUEDSERIALNUMBER
							  ,_T3.QUANTITYRECTYPE6
							  ,_T3.GROUPNUMBER
							  ,_T3.ENGINEERINGCHANGE
						  FROM(SELECT T3.PRIMARYSEQNO
									 ,T3.SEQUENCENUMBER
									 ,T3.RECORDTYPE
									 ,T3.COLUMNDATA
									 ,CASE
										  WHEN CHARINDEX('*',T3.COLUMNDATA) > 0 THEN 1
										 ELSE 0
									  END AS HAS_ASTERISK
									  ,IIF(CAST(T3.RECORDTYPE AS INT) - CAST(LAG(T3.RECORDTYPE,1)OVER(ORDER BY T3.SEQUENCENUMBER) AS INT)<0,1,0) DESC_RECTYPE_CHANGE		 
									 ,T3.QUANTITYRECTYPE5
									 ,T3.SERIALNUMBERSYMBOL
									 ,T3.SERIALNUMBERPREFIX
									 ,T3.EFFECTIVESERIALNUMBER
									 ,T3.DISCONTINUEDSERIALNUMBER
									 ,T3.QUANTITYRECTYPE6
									 ,T3.GROUPNUMBER
									 ,T3.ENGINEERINGCHANGE
								 FROM SISWEB_OWNER.LNKNPRINFORECTYPE456 AS T3
								 WHERE T3.PRIMARYSEQNO = @PRIMARYSEQNO) AS _T3)
					 SELECT IIF(ISNULL(LAG(ORDERED_LINES.ROW_NUM,1) OVER(
								ORDER BY ORDERED_LINES.SEQUENCENUMBER),1) = ORDERED_LINES.ROW_NUM,0,1) AS LF
						   ,ORDERED_LINES.ROW_NUM
						   ,ORDERED_LINES.SEQUENCENUMBER
						   ,ORDERED_LINES.COLUMNDATA
						   ,ORDERED_LINES.RECORDTYPE
						   ,ORDERED_LINES.QUANTITYRECTYPE5
						   ,ORDERED_LINES.SERIALNUMBERSYMBOL
						   ,ORDERED_LINES.SERIALNUMBERPREFIX
						   ,ORDERED_LINES.EFFECTIVESERIALNUMBER
						   ,ORDERED_LINES.DISCONTINUEDSERIALNUMBER
						   ,ORDERED_LINES.QUANTITYRECTYPE6
						   ,ORDERED_LINES.GROUPNUMBER
						   ,ORDERED_LINES.ENGINEERINGCHANGE
					   FROM(SELECT T4.ROW_NUM
								  ,MIN(T4.SEQUENCENUMBER) AS        SEQUENCENUMBER
								  ,STRING_AGG(T4.COLUMNDATA,'|') AS COLUMNDATA
								  ,T4.RECORDTYPE
								  ,T4.QUANTITYRECTYPE5
								  ,T4.SERIALNUMBERSYMBOL
								  ,T4.SERIALNUMBERPREFIX
								  ,T4.EFFECTIVESERIALNUMBER
								  ,T4.DISCONTINUEDSERIALNUMBER
								  ,T4.QUANTITYRECTYPE6
								  ,T4.GROUPNUMBER
								  ,T4.ENGINEERINGCHANGE
							  FROM T456_LINES AS T4
							  WHERE T4.RECORDTYPE = 4
							  GROUP BY T4.ROW_NUM
									  ,T4.RECORDTYPE
									  ,T4.QUANTITYRECTYPE5
									  ,T4.SERIALNUMBERSYMBOL
									  ,T4.SERIALNUMBERPREFIX
									  ,T4.EFFECTIVESERIALNUMBER
									  ,T4.DISCONTINUEDSERIALNUMBER
									  ,T4.QUANTITYRECTYPE6
									  ,T4.GROUPNUMBER
									  ,T4.ENGINEERINGCHANGE
							UNION ALL
							SELECT T56.ROW_NUM
								  ,T56.SEQUENCENUMBER
								  ,T56.COLUMNDATA
								  ,T56.RECORDTYPE
								  ,T56.QUANTITYRECTYPE5
								  ,T56.SERIALNUMBERSYMBOL
								  ,T56.SERIALNUMBERPREFIX
								  ,T56.EFFECTIVESERIALNUMBER
								  ,T56.DISCONTINUEDSERIALNUMBER
								  ,T56.QUANTITYRECTYPE6
								  ,T56.GROUPNUMBER
								  ,T56.ENGINEERINGCHANGE
							  FROM T456_LINES AS T56
							  WHERE T56.RECORDTYPE IN (5,6) ) AS ORDERED_LINES;

			OPEN T2_CURSOR;
			OPEN T3_CURSOR;
			FETCH NEXT FROM T3_CURSOR INTO @LF
										  ,@ROW_NUM_T3
										  ,@SEQUENCENUMBER_T3
										  ,@COLUMNDATA_T4
										  ,@RECORDTYPE
										  ,@QUANTITYRECTYPE5
										  ,@SERIALNUMBERSYMBOL
										  ,@SERIALNUMBERPREFIX
										  ,@EFFECTIVESERIALNUMBER
										  ,@DISCONTINUEDSERIALNUMBER
										  ,@QUANTITYRECTYPE6
										  ,@GROUPNUMBER
										  ,@ENGINEERINGCHANGE;

			/*LOOP CURSOR T3*/
			WHILE
				  @@FETCH_STATUS = 0
				  OR /*CURSOR T3 IS EMPTY*/				  (
														  @RECORDTYPE IS NULL
														  AND @FIRSTROW = 'TRUE')
			BEGIN
				IF
				   CHARINDEX('*',@COLUMNDATA_T4) > 0
				   OR @FIRSTROW = 'TRUE'

				/*READ CURSOR_T2*/
				BEGIN
					FETCH NEXT FROM T2_CURSOR INTO @ROW_NUM_T2
												  ,@SEQUENCENUMBER_T2
												  ,@COLUMNDATA_T2
												  ,@COLUMNDATA_T3;
					SET @FIRSTROW = 'FALSE';
				END;
				ELSE
				BEGIN
					SELECT @ROW_NUM_T2 = NULL
						  ,@SEQUENCENUMBER_T2 = NULL
						  ,@COLUMNDATA_T2 = NULL
						  ,@COLUMNDATA_T3 = NULL;
				END;
				INSERT INTO @RETURN_DATASET
					   (PARTNUMBER
					   ,PRIMARYSEQNO
					   ,SEQUENCENUMBER
					   ,RECORDTYPE
					   ,PARTNUMBERDESCRIPTION
					   ,COLUMNDATA_T2
					   ,COLUMNDATA_T3
					   ,QUANTITYRECTYPE5
					   ,SERIALNUMBERSYMBOL
					   ,SERIALNUMBERPREFIX
					   ,EFFECTIVESERIALNUMBER
					   ,DISCONTINUEDSERIALNUMBER
					   ,QUANTITYRECTYPE6
					   ,GROUPNUMBER
					   ,ENGINEERINGCHANGE
					   ,NPRINDICATOR
					   ) 
				VALUES
					(@PARTNUMBER
					,@PRIMARYSEQNO
					,@ROWCOUNTER
					,ISNULL(@RECORDTYPE,'4')
					,@COLUMNDATA_T2
					,@COLUMNDATA_T3
					,REPLACE(@COLUMNDATA_T4,'*','')
					,@QUANTITYRECTYPE5
					,@SERIALNUMBERSYMBOL
					,@SERIALNUMBERPREFIX
					,@EFFECTIVESERIALNUMBER
					,@DISCONTINUEDSERIALNUMBER
					,@QUANTITYRECTYPE6
					,@GROUPNUMBER
					,@ENGINEERINGCHANGE
					,@NPRINDICATOR
					);
				FETCH NEXT FROM T3_CURSOR INTO @LF
											  ,@ROW_NUM_T3
											  ,@SEQUENCENUMBER_T3
											  ,@COLUMNDATA_T4
											  ,@RECORDTYPE
											  ,@QUANTITYRECTYPE5
											  ,@SERIALNUMBERSYMBOL
											  ,@SERIALNUMBERPREFIX
											  ,@EFFECTIVESERIALNUMBER
											  ,@DISCONTINUEDSERIALNUMBER
											  ,@QUANTITYRECTYPE6
											  ,@GROUPNUMBER
											  ,@ENGINEERINGCHANGE;
				SET @ROWCOUNTER+=1;
			END;
			CLOSE T3_CURSOR;
			DEALLOCATE T3_CURSOR;
			CLOSE T2_CURSOR;
			DEALLOCATE T2_CURSOR;

			FETCH NEXT FROM T1_CURSOR INTO @PRIMARYSEQNO
										  ,@PARTNUMBERDESCRIPTION
										  ,@PACKAGEQUANTITY
										  ,@NPRINDICATOR;
			SET @FIRSTROW = 'TRUE';
			SET @RECORDTYPE = NULL;
			SET @ROWCOUNTER = 0;
		END;

		CLOSE T1_CURSOR;
		DEALLOCATE T1_CURSOR;

		RETURN;
	END;
GO
